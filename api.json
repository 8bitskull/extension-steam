{
    "groups": [
        {
            "files": [
                {
                    "description": null,
                    "entries": [
                        {
                            "description": "Same rules as GetFriendPersonaState() apply as to whether or not the user knowns the name of the other user note that on first joining a lobby, chat room or game server the local user will not known the name of the other users automatically; that information will arrive asyncronously.",
                            "has_params": false,
                            "has_returns": true,
                            "name": "SteamFriends_GetFriendPersonaName",
                            "params": [],
                            "returns": [
                                {
                                    "description": "Name of user",
                                    "name": "String",
                                    "type": "name"
                                }
                            ],
                            "summary": "Returns the name of another user.",
                            "usage": null
                        }
                    ],
                    "file_description": "Steam Overlay.",
                    "file_summary": "Interface to access information about individual users and interact with the",
                    "filename": "steam/src/steam_friends.cpp",
                    "group": "src",
                    "has_params": false,
                    "has_returns": false,
                    "module": "steam_friends",
                    "name": null,
                    "params": [],
                    "returns": [],
                    "summary": null,
                    "usage": null
                },
                {
                    "entries": [
                        {
                            "description": "A CSteamID is a unique identifier for an account, and used to differentiate users in all parts of the Steamworks API.",
                            "has_params": false,
                            "has_returns": true,
                            "name": "user_get_steam_id",
                            "params": [],
                            "returns": [
                                {
                                    "description": "",
                                    "name": "id",
                                    "type": "CSteamID"
                                }
                            ],
                            "summary": "Returns the CSteamID of the account currently logged into the Steam client.",
                            "usage": null
                        },
                        {
                            "description": "",
                            "has_params": false,
                            "has_returns": true,
                            "name": "user_get_player_steam_level",
                            "params": [],
                            "returns": [
                                {
                                    "description": "",
                                    "name": "level",
                                    "type": "number"
                                }
                            ],
                            "summary": "Gets the Steam Level of the user, as shown on their profile.",
                            "usage": null
                        },
                        {
                            "description": "If you only have one set of cards, the series will be 1. The user has can have two different badges for a series; the regular (max level 5) and the foil (max level 1).",
                            "has_params": false,
                            "has_returns": true,
                            "name": "user_get_game_badge_level",
                            "params": [],
                            "returns": [
                                {
                                    "description": "",
                                    "name": "series",
                                    "type": "number"
                                },
                                {
                                    "description": "",
                                    "name": "foil",
                                    "type": "boolean"
                                }
                            ],
                            "summary": "Trading Card badges data access.",
                            "usage": null
                        },
                        {
                            "description": "Servers.",
                            "has_params": false,
                            "has_returns": true,
                            "name": "user_logged_on",
                            "params": [],
                            "returns": [
                                {
                                    "description": "",
                                    "name": "logged_on",
                                    "type": "boolean"
                                }
                            ],
                            "summary": "Returns true if the Steam client current has a live connection to the Steam",
                            "usage": null
                        },
                        {
                            "description": "Only valid once the user has connected to steam .",
                            "has_params": false,
                            "has_returns": true,
                            "name": "user_is_behind_nat",
                            "params": [],
                            "returns": [
                                {
                                    "description": "",
                                    "name": "behind_nat",
                                    "type": "boolean"
                                }
                            ],
                            "summary": "Returns true if this users looks like they are behind a NAT device.",
                            "usage": null
                        },
                        {
                            "description": "",
                            "has_params": false,
                            "has_returns": true,
                            "name": "user_is_phone_verified",
                            "params": [],
                            "returns": [
                                {
                                    "description": "",
                                    "name": "verified",
                                    "type": "boolean"
                                }
                            ],
                            "summary": "Gets whether the users phone number is verified.",
                            "usage": null
                        },
                        {
                            "description": "",
                            "has_params": false,
                            "has_returns": true,
                            "name": "user_is_phone_identifying",
                            "params": [],
                            "returns": [
                                {
                                    "description": "",
                                    "name": "verifying",
                                    "type": "boolean"
                                }
                            ],
                            "summary": "Gets whether the users phone number is identifying.",
                            "usage": null
                        },
                        {
                            "description": "",
                            "has_params": false,
                            "has_returns": true,
                            "name": "user_is_phone_requiring_verification",
                            "params": [],
                            "returns": [
                                {
                                    "description": "",
                                    "name": "verification",
                                    "type": "boolean"
                                }
                            ],
                            "summary": "Gets whether the users phone number is awaiting (re)verification.",
                            "usage": null
                        },
                        {
                            "description": "",
                            "has_params": false,
                            "has_returns": true,
                            "name": "user_is_two_factor_enabled",
                            "params": [],
                            "returns": [
                                {
                                    "description": "",
                                    "name": "enabled",
                                    "type": "boolean"
                                }
                            ],
                            "summary": "Gets whether the user has two factor enabled on their account.",
                            "usage": null
                        }
                    ],
                    "filename": "steam/src/steam_user.cpp",
                    "group": "src",
                    "module": "steam_user"
                },
                {
                    "description": null,
                    "entries": [
                        {
                            "description": "",
                            "has_params": true,
                            "has_returns": true,
                            "name": "user_stats_get_stat_int",
                            "params": [
                                {
                                    "description": "Id of the stat to get",
                                    "name": "id",
                                    "type": "string"
                                }
                            ],
                            "params_string": "id",
                            "returns": [
                                {
                                    "description": "",
                                    "name": "Boolean",
                                    "type": "ok"
                                },
                                {
                                    "description": "The stat or nil",
                                    "name": "Number",
                                    "type": "stat"
                                }
                            ],
                            "summary": "Get user stat as an integer.",
                            "usage": null
                        },
                        {
                            "description": "",
                            "has_params": true,
                            "has_returns": true,
                            "name": "user_stats_set_stat_int",
                            "params": [
                                {
                                    "description": "Id of the stat to set",
                                    "name": "id",
                                    "type": "string"
                                },
                                {
                                    "description": "Number to set",
                                    "name": "stat",
                                    "type": "number"
                                }
                            ],
                            "params_string": "id,stat",
                            "returns": [
                                {
                                    "description": "",
                                    "name": "ok",
                                    "type": "boolean"
                                }
                            ],
                            "summary": "Set user stat.",
                            "usage": null
                        },
                        {
                            "description": "",
                            "has_params": true,
                            "has_returns": true,
                            "name": "user_stats_get_stat_float",
                            "params": [
                                {
                                    "description": "Id of the stat to get",
                                    "name": "id",
                                    "type": "string"
                                }
                            ],
                            "params_string": "id",
                            "returns": [
                                {
                                    "description": "",
                                    "name": "ok",
                                    "type": "Boolean"
                                },
                                {
                                    "description": "The stat",
                                    "name": "stat",
                                    "type": "Number"
                                }
                            ],
                            "summary": "Get user stat as a floating point number.",
                            "usage": null
                        },
                        {
                            "description": "",
                            "has_params": true,
                            "has_returns": true,
                            "name": "user_stats_set_stat_float",
                            "params": [
                                {
                                    "description": "Id of the stat to set",
                                    "name": "id",
                                    "type": "string"
                                },
                                {
                                    "description": "Number to set",
                                    "name": "stat",
                                    "type": "number"
                                }
                            ],
                            "params_string": "id,stat",
                            "returns": [
                                {
                                    "description": "",
                                    "name": "ok",
                                    "type": "Boolean"
                                }
                            ],
                            "summary": "Set user stat.",
                            "usage": null
                        },
                        {
                            "description": "",
                            "has_params": false,
                            "has_returns": true,
                            "name": "SteamUserStats_RequestCurrentStats",
                            "params": [],
                            "returns": [
                                {
                                    "description": "True if successful",
                                    "name": "ok",
                                    "type": "Boolean"
                                }
                            ],
                            "summary": "Ask the server to send down this user's data and achievements for this game.",
                            "usage": null
                        },
                        {
                            "description": "",
                            "has_params": true,
                            "has_returns": true,
                            "name": "user_stats_get_downloaded_leaderboard_entry",
                            "params": [
                                {
                                    "description": "Leaderboard handle",
                                    "name": "leaderboard",
                                    "type": "string"
                                },
                                {
                                    "description": "Which entry to get",
                                    "name": "index",
                                    "type": "number"
                                }
                            ],
                            "params_string": "leaderboard,index",
                            "returns": [
                                {
                                    "description": "",
                                    "name": "ok",
                                    "type": "Boolean"
                                },
                                {
                                    "description": "The requested leaderboard entry.",
                                    "name": "entry",
                                    "type": "Table"
                                }
                            ],
                            "summary": "Returns data about a single leaderboard entry",
                            "usage": null
                        }
                    ],
                    "file_description": "Leaderboards.",
                    "file_summary": "Provides functions for accessing and submitting stats, achievements, and",
                    "filename": "steam/src/steam_userstats.cpp",
                    "group": "src",
                    "has_params": false,
                    "has_returns": false,
                    "module": "steam_userstats",
                    "name": null,
                    "params": [],
                    "returns": [],
                    "summary": null,
                    "usage": null
                }
            ],
            "group": "src"
        }
    ]
}